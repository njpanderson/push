{
    "properties.njpPush.locale.description": "要使用的区域设置(请参见 README 中支持的区域设置)",
    "properties.njpPush.settingsFilename.description": "定义 Push 的 JSON 配置文件名",
    "properties.njpPush.settingsFileGlob.description": "为查找 JSON 配置文件定义 glob 规则",
    "properties.njpPush.privateSSHKey.description": "为 SFTP 定义默认的 SSH 密钥",
    "properties.njpPush.privateSSHKeyPassphrase.description": "定义默认的 SSH 密钥密码，如果需要的话",
    "properties.njpPush.uploadQueue.description": "在保存时为延迟的上传启用上传队列",
    "properties.njpPush.ignoreGlobs.description": "配置忽略路径的正则表达式数组",
    "properties.njpPush.queueCompleteMessageType.description": "队列完成后如何通知。选择 status 或弹出 message ",
    "properties.njpPush.statusMessageColor.description": "设置状态消息的颜色(进度除外)。详情见 https://code.visualstudio.com/docs/getstarted/theme-color-reference",
    "properties.njpPush.queueWatchedFiles.description": "设置为 true 后在更改文件时将其设置为队列监视文件，而不是上传它们",
    "properties.njpPush.persistWatchers.description": "设置为 true 时持久化 vscode 会话的监听器",
    "properties.njpPush.autoUploadQueue.description": "设置为 true 时自动上传进入队列的文件。这允许 VS Code 中的更改在保存时上传，而不是从外部上传 VS Code 中的更改(就像监听器会做的那样)",
    "properties.njpPush.useEnvLabel.description": "设置为 true 可以在状态栏中显示打开的编辑器中当前激活的环境名称",
    "properties.njpPush.envColours.description": "在服务设置文件中定义特定环境名称的颜色。颜色名称及其值可以自定义，匹配的名称将相应着色",
    "properties.njpPush.showChangelog.description": "显示 Push 升级其次要版本或主要版本时的更改日志",
    "properties.njpPush.showTitleMenuUpload.description": "在标题菜单上显示上传按钮",
    "properties.njpPush.limitServiceTraversal.description": "在寻找服务设置文件时，限制 Push 在放弃之前的传输范围。如果启用，Push 将在工作区根目录停止(或50个父级的硬限制)",
    "properties.njpPush.disableWatchOnEnvChange.description": "当活动环境更改时自动禁用所有监听器",
    "properties.njpPush.envReminderTimeout.description": "以秒为单位，定义 Push 在传输期间，提醒生成激活的环境之前的等待时间",
    "command.push.createServiceConfig.title": "创建 Push 服务配置",
    "command.push.editServiceConfig.title": "编辑 Push 服务配置",
    "command.push.importConfig.title": "导入 Push 服务配置",
    "command.push.setServiceEnv.title": "为当前文件设置服务环境",
    "command.push.upload.title": "(批量)上传文件",
    "command.push.download.title": "(批量)下载文件",
    "command.push.uploadFolder.title": "(批量)上传文件夹",
    "command.push.downloadFolder.title": "(批量)下载文件夹",
    "command.push.diff.title": "与远程文件对比",
    "command.push.uploadQueuedItems.title": "上传队列文件",
    "command.push.removeQueuedItem.title": "从队列中移除文件",
    "command.push.clearUploadQueue.title": "从 Push 队列中移除所有文件",
    "command.push.queueGitChangedFiles.title": "将所有git生效的文件添加到队列",
    "command.push.uploadGitChangedFiles.title": "上传所有git生效的文件",
    "command.push.queueGitCommit.title": "从git提交的文件中创建队列",
    "command.push.uploadGitCommit.title": "上传git提交的文件",
    "command.push.cancelQueues.title": "取消激活的队列",
    "command.push.stopQueues.title": "停止传输并且取消激活的队列",
    "command.push.addWatchFile.title": "使用 Push 监听文件",
    "command.push.removeWatchFile.title": "停止 Push 监听文件",
    "command.push.addWatchFolder.title": "使用 Push 监听文件夹",
    "command.push.removeWatchFolder.title": "停止 Push 监听文件夹",
    "command.push.startWatch.title": "启动所有 Push 监听的列表",
    "command.push.stopWatch.title": "停止所有 Push 监听的列表",
    "command.push.listWatchers.title": "列出所有 Push 激活的监听器",
    "command.push.clearWatchers.title": "清除所有 Push 监听器",
    "command.push.purgeStoredWatchers.title": "清除所有保存的监听器(并且清理当前列表)",
    "views.njp-push.push.watchListExplorer": "监听文件",
    "views.njp-push.push.uploadQueueExplorer": "上传队列"
}