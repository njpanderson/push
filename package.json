{
  "name": "push",
  "displayName": "Push",
  "description": "SFTP and File based uploading",
  "version": "0.5.1",
  "publisher": "njp-anderson",
  "engines": {
    "vscode": "^1.22.0"
  },
  "license": "SEE LICENSE IN LICENSE",
  "icon": "img/icon.png",
  "keywords": [
    "sftp",
    "transfer",
    "upload",
    "sync",
    "push"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/njpanderson/push.git"
  },
  "categories": [
    "Other"
  ],
  "galleryBanner": {
    "color": "#305875",
    "theme": "dark"
  },
  "activationEvents": [
    "*"
  ],
  "main": "./extension",
  "contributes": {
    "views": {
      "explorer": [
        {
          "id": "push.pushExplorer",
          "name": "Push"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Push",
      "properties": {
        "njpPush.locale": {
          "type": "string",
          "default": "en_gb",
          "description": "Locale to use (See supported locales in the README)."
        },
        "njpPush.settingsFilename": {
          "type": "string",
          "default": ".push.settings.jsonc",
          "description": "Defines the push settings JSON filename."
        },
        "njpPush.settingsFileGlob": {
          "type": "string",
          "default": ".push.settings.json*",
          "description": "Defines the glob used to find push settings JSON files."
        },
        "njpPush.privateSSHKey": {
          "type": "string",
          "default": "",
          "description": "Defines the default SSH key file for SFTP."
        },
        "njpPush.privateSSHKeyPassphrase": {
          "type": "string",
          "default": "",
          "description": "Defines the default SSH key passphrase, if needed."
        },
        "njpPush.uploadQueue": {
          "type": "boolean",
          "default": true,
          "description": "Enable the upload queue for deferred uploads on save."
        },
        "njpPush.ignoreGlobs": {
          "type": "array",
          "default": [
            "**/.DS_Store",
            "**/Thumbs.db",
            "**/desktop.ini",
            "**/.git/*",
            "**/.svn/*"
          ],
          "description": "An array of regular expressions to match against ignored paths."
        },
        "njpPush.queueCompleteMessageType": {
          "type": "string",
          "default": "status",
          "description": "How to notify once a queue is completed. Choose 'status' or popup 'message'."
        },
        "njpPush.statusMessageColor": {
          "type": "string",
          "default": "statusBar.foreground",
          "description": "Set the colour of a status message (except progress). See https://code.visualstudio.com/docs/getstarted/theme-color-reference"
        },
        "njpPush.queueWatchedFiles": {
          "type": "boolean",
          "default": false,
          "description": "Set true to queue watched files on change instead of uploading them."
        },
        "njpPush.persistWatchers": {
          "type": "boolean",
          "default": false,
          "description": "Set true to persist watchers across sessions of vscode."
        },
        "njpPush.autoUploadQueue": {
          "type": "boolean",
          "default": false,
          "description": "Set true to automatically upload files that enter the queue. This allows for changes within VS Code to be upload on save, while not uploading changes from outside VS Code (like a watcher would)."
        },
        "njpPush.useEnvLabel": {
          "type": "boolean",
          "default": true,
          "description": "Set true to show the currently active environment for the opened editor in the status bar."
        },
        "njpPush.envColours": {
          "type": "object",
          "default": {
            "dev": "#62defd",
            "stage": "#ffd08a",
            "prod": "#f7ed00"
          },
          "description": "Defines the colours for specific environment names within the service settings file. The colour names as well as their values can be customised, and matching names will be coloured accordingly."
        },
        "njpPush.showChangelog": {
          "type": "boolean",
          "default": true,
          "description": "Shows a changelog if Push upgrades either its minor or major version."
        }
      }
    },
    "commands": [
      {
        "command": "push.createServiceConfig",
        "title": "Create Push service configuration",
        "category": "Push"
      },
      {
        "command": "push.editServiceConfig",
        "title": "Edit Push service configuration",
        "category": "Push"
      },
      {
        "command": "push.importConfig",
        "title": "Import Push service configuration",
        "category": "Push"
      },
      {
        "command": "push.setServiceEnv",
        "title": "Set service environment for current file",
        "category": "Push"
      },
      {
        "command": "push.upload",
        "title": "Upload File",
        "category": "Push"
      },
      {
        "command": "push.download",
        "title": "Download File",
        "category": "Push"
      },
      {
        "command": "push.uploadFolder",
        "title": "Upload Folder",
        "category": "Push"
      },
      {
        "command": "push.downloadFolder",
        "title": "Download Folder",
        "category": "Push"
      },
      {
        "command": "push.diff",
        "title": "Compare with remote file",
        "category": "Push"
      },
      {
        "command": "push.uploadQueuedItems",
        "title": "Upload queued items",
        "category": "Push",
        "icon": {
          "dark": "resources/dark/repo-push.svg",
          "light": "resources/light/repo-push.svg"
        }
      },
      {
        "command": "push.removeQueuedItem",
        "title": "Remove file",
        "category": "Push"
      },
      {
        "command": "push.clearUploadQueue",
        "title": "Remove all files from the Push upload queue",
        "category": "Push",
        "icon": {
          "dark": "resources/dark/trashcan.svg",
          "light": "resources/light/trashcan.svg"
        }
      },
      {
        "command": "push.queueGitChangedFiles",
        "title": "Add Git working files to the Push queue",
        "category": "Push"
      },
      {
        "command": "push.uploadGitChangedFiles",
        "title": "Upload all Git working files",
        "category": "Push"
      },
      {
        "command": "push.cancelQueues",
        "title": "Cancel active queue",
        "category": "Push"
      },
      {
        "command": "push.stopQueues",
        "title": "Stop transfer and cancel active queue",
        "category": "Push"
      },
      {
        "command": "push.addWatchFile",
        "title": "Watch file with Push",
        "category": "Push"
      },
      {
        "command": "push.removeWatchFile",
        "title": "Stop watching file with Push",
        "category": "Push"
      },
      {
        "command": "push.addWatchFolder",
        "title": "Watch folder with Push",
        "category": "Push"
      },
      {
        "command": "push.removeWatchFolder",
        "title": "Stop watching folder with Push",
        "category": "Push"
      },
      {
        "command": "push.startWatch",
        "title": "Start all Push watch lists",
        "category": "Push",
        "icon": {
          "dark": "resources/dark/radio-tower.svg",
          "light": "resources/light/radio-tower.svg"
        }
      },
      {
        "command": "push.stopWatch",
        "title": "Stop all Push watch lists",
        "category": "Push",
        "icon": {
          "dark": "resources/dark/x.svg",
          "light": "resources/light/x.svg"
        }
      },
      {
        "command": "push.listWatchers",
        "title": "List all active Push watchers",
        "category": "Push"
      },
      {
        "command": "push.clearWatchers",
        "title": "Clear all Push watchers",
        "category": "Push"
      },
      {
        "command": "push.purgeStoredWatchers",
        "title": "Purge all stored watchers (and clear current list)",
        "category": "Push"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "push:initialised",
          "command": "push.editServiceConfig",
          "group": "njp-push-config@1"
        },
        {
          "when": "push:initialised",
          "command": "push.importConfig",
          "group": "njp-push-config@1"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.upload",
          "group": "njp-push@2"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.download",
          "group": "njp-push@3"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.diff",
          "group": "njp-push@4"
        },
        {
          "when": "push:initialised && explorerResourceIsFolder",
          "command": "push.uploadFolder",
          "group": "njp-push@5"
        },
        {
          "when": "push:initialised && explorerResourceIsFolder",
          "command": "push.downloadFolder",
          "group": "njp-push@6"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.addWatchFile",
          "group": "njp-push-watch@7"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.removeWatchFile",
          "group": "njp-push-watch@8"
        },
        {
          "when": "push:initialised && explorerResourceIsFolder",
          "command": "push.addWatchFolder",
          "group": "njp-push-watch@7"
        },
        {
          "when": "push:initialised && explorerResourceIsFolder",
          "command": "push.removeWatchFolder",
          "group": "njp-push-watch@8"
        }
      ],
      "editor/title/context": [
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.upload",
          "group": "njp-push@1"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.download",
          "group": "njp-push@2"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.diff",
          "group": "njp-push@3"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.addWatchFile",
          "group": "njp-push-watch@7"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.removeWatchFile",
          "group": "njp-push-watch@8"
        }
      ],
      "editor/context": [
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.upload",
          "group": "njp-push@1"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.download",
          "group": "njp-push@2"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.diff",
          "group": "njp-push@3"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.addWatchFile",
          "group": "njp-push-watch@7"
        },
        {
          "when": "push:initialised && !explorerResourceIsFolder",
          "command": "push.removeWatchFile",
          "group": "njp-push-watch@8"
        }
      ],
      "commandPalette": [
        {
          "command": "push.setServiceEnv",
          "when": "editorIsOpen && push:hasServiceContext"
        },
        {
          "command": "push.uploadFolder",
          "when": "false"
        },
        {
          "command": "push.downloadFolder",
          "when": "false"
        },
        {
          "command": "push.addWatchFolder",
          "when": "false"
        },
        {
          "command": "push.removeWatchFolder",
          "when": "false"
        },
        {
          "command": "push.cancelQueues",
          "when": "push:initialised && push:queue-default-running"
        },
        {
          "command": "push.stopQueues",
          "when": "push:initialised && push:queue-default-running"
        },
        {
          "command": "push.stopWatch",
          "when": "push:initialised && push:hasRunningWatchers"
        },
        {
          "command": "push.startWatch",
          "when": "push:initialised && push:hasStoppedWatchers"
        },
        {
          "command": "push.clearWatchers",
          "when": "push:initialised && push:hasWatchers"
        },
        {
          "command": "push.uploadQueuedItems",
          "when": "push:hasUploadQueue"
        },
        {
          "command": "push.clearUploadQueue",
          "when": "push:hasUploadQueue"
        },
        {
          "command": "push.removeQueuedItem",
          "when": "push:hasUploadQueue && push:activeEditorInUploadQueue"
        },
        {
          "command": "push.queueGitChangedFiles",
          "when": "push:hasUploadQueue"
        }
      ],
      "view/title": [
        {
          "command": "push.stopWatch",
          "when": "view == push.pushExplorer && push:initialised && push:hasRunningWatchers",
          "group": "navigation@1"
        },
        {
          "command": "push.startWatch",
          "when": "view == push.pushExplorer && push:initialised && push:hasStoppedWatchers",
          "group": "navigation@2"
        },
        {
          "command": "push.uploadQueuedItems",
          "when": "view == push.pushExplorer && push:initialised && push:hasUploadQueue && push:queue-upload-itemCount",
          "group": "navigation@3"
        },
        {
          "command": "push.clearUploadQueue",
          "when": "view == push.pushExplorer && push:initialised && push:hasUploadQueue && push:queue-upload-itemCount",
          "group": "navigation@4"
        }
      ],
      "view/item/context": [
        {
          "command": "push.removeWatchFile",
          "when": "viewItem == watch:file"
        },
        {
          "command": "push.removeWatchFolder",
          "when": "viewItem == watch:folder"
        },
        {
          "command": "push.removeQueuedItem",
          "when": "viewItem == uploadQueue:file"
        }
      ]
    },
    "keybindings": [
      {
        "command": "push.upload",
        "key": "ctrl+alt+u",
        "mac": "cmd+ctrl+u",
        "when": "editorTextFocus"
      },
      {
        "command": "push.download",
        "key": "ctrl+alt+d",
        "mac": "cmd+ctrl+d",
        "when": "editorTextFocus"
      },
      {
        "command": "push.uploadQueuedItems",
        "key": "ctrl+alt+p",
        "mac": "cmd+ctrl+p"
      }
    ]
  },
  "scripts": {
    "postinstall": "node ./node_modules/vscode/bin/install",
    "t": "mocha --reporter dot",
    "tc": "istanbul cover --root ./src --dir ./coverage _mocha",
    "test": "mocha",
    "docs": "jsdoc -c .ide/jsdoc.json && node .ide/package-docs.js",
    "publish": "npm run t && vsce publish",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/mocha": "^2.2.48",
    "@types/node": "^6.0.106",
    "chai": "^4.1.2",
    "eslint": "^4.19.1",
    "glob": "^7.1.2",
    "istanbul": "^0.4.5",
    "jsdoc": "^3.5.5",
    "mocha": "^5.2.0",
    "typescript": "^2.8.3"
  },
  "dependencies": {
    "jsonc-parser": "^2.0.1",
    "micromatch": "^3.1.10",
    "mkdirp": "^0.5.1",
    "mockery": "^2.1.0",
    "simple-git": "^1.92.0",
    "ssh2-sftp-client": "^1.1.0",
    "tmp": "^0.0.33",
    "url-parse": "^1.4.1",
    "vsce": "^1.46.0",
    "vscode": "^1.1.18"
  }
}
